name: Pull Copilot Prompts

on:
  schedule:
    - cron: '0 12 * * 1'  # Every Monday at 12:00 PM UTC
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even if no changes'
        required: false
        default: false
        type: boolean

env:
  BRANCH_NAME: update/copilot-prompts-${{ github.run_number }}
  COMMIT_MESSAGE: 'Update Copilot prompts from publisher repository [skip ci]'
  PR_TITLE: 'ðŸ“š Update Copilot prompts from publisher'
  PR_BODY: |
    This PR updates Copilot prompts from the publisher repository.
    - Source: ${{ vars.PUBLISHER_GIT_URL }}
    - Updated: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
    ${{ inputs.force_sync && '- Note: This is a forced sync' || '' }}

jobs:
  sync-prompts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout destination repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT }}  # Use PAT instead of GITHUB_TOKEN

      - name: Clone and process source repository
        id: sync
        run: |
          # Prepare repository URL with PAT
          REPO_URL="${{ vars.PUBLISHER_GIT_URL }}"
          REPO_URL=$(echo "$REPO_URL" | sed -E "s#^(https?://)?#https://${{ secrets.PAT }}@#")
          
          # Clone source repository with retry logic
          for i in {1..3}; do
            git clone --depth 1 "$REPO_URL" source-repo && break
            rm -rf source-repo
            [ $i -eq 3 ] && { echo "Failed to clone repository after 3 attempts"; exit 1; }
            sleep 5
          done

          # Process markdown files
          mkdir -p .github
          changes_detected=false
          
          if [ -d "source-repo/.github" ]; then
            cd source-repo
            for file in $(find .github -name "*.md" -type f); do
              mkdir -p "../$(dirname "$file")"
              if [ ! -f "../$file" ] || ! cmp -s "$file" "../$file"; then
                cp --parents "$file" ../
                changes_detected=true
                echo "Changed or added: $file"
              fi
            done
            cd ..
          fi
          
          rm -rf source-repo
          if [ "${{ inputs.force_sync }}" == "true" ]; then
            changes_detected=true
            echo "Force sync enabled - will create PR regardless of changes"
          fi
          echo "changes_detected=$changes_detected" >> $GITHUB_OUTPUT

      - name: Create PR
        if: steps.sync.outputs.changes_detected == 'true'
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT }}  # Use PAT instead of GITHUB_TOKEN
          commit-message: ${{ env.COMMIT_MESSAGE }}${{ inputs.force_sync && ' (forced sync)' || '' }}
          branch: ${{ env.BRANCH_NAME }}
          base: main
          add-paths: |
            .github
          title: ${{ env.PR_TITLE }}${{ inputs.force_sync && ' (forced)' || '' }}
          body: ${{ env.PR_BODY }}
          delete-branch: true
